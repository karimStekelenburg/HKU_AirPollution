#include <arduino.h>

int stepPin = 3;
int dirPin = 2;

int stepsPerRev = 200;


void setup(){
  pinMode(stepPin, OUTPUT);
  pinMode(dirPin, OUTPUT);
}

void loop(){
  digitalWrite(dirPin, LOW);
  digitalWrite(stepPin, HIGH);
  delayMicroseconds(2000);
  digitalWrite(stepPin, LOW);
  delayMicroseconds(2000);


}



---------------------------------------------------------------
#include <arduino.h>
#include <Numa17Control.h>

Numa17Control numa(4, 3);
int inputPos;
void setup(){
  Serial.begin(9600);
}

void loop(){
  inputPos = 200;
  if(Serial.available() > 0){
      inputPos = Serial.parseInt();
      Serial.println('understood!');
  }

  if(inputPos != 200){
    numa.setPosition(inputPos);
  }
  numa.run();
}



-----------------------------------------------------------------
#include <arduino.h>


int const dirPin = 4;
int const stepPin = 3;
int const stepsPerRev = 200;
int const revsPerCoordinate = 2;
int const microsecondSpeedDelay = 2000;
bool dirr = false;

int currentPos = 0;
int nextPos = 0;
int plannedSteps = 0;
int plannedCoords;
int plannedRevs;

void setup() {
  Serial.begin(9600);
  pinMode(dirPin, OUTPUT);
  pinMode(stepPin, OUTPUT);
  digitalWrite(stepPin, HIGH);
  digitalWrite(stepPin, LOW);
}

void loop() {
  if (Serial.available() > 0) {
    nextPos = Serial.parseInt();
    while (Serial.available()) {
      Serial.read();
    }
  }
  delay(1000);

  // calculate amount of coordinates
  plannedCoords = nextPos - currentPos;

  // calculate amount of revolutions
  plannedRevs = plannedCoords * revsPerCoordinate;

  // calculate planned steps
  plannedSteps = plannedRevs * stepsPerRev;

  if (plannedSteps != 0) {
    Serial.println();
    Serial.println("----------------INFO--------------------");
    Serial.println("Current Position:");
    Serial.println(currentPos);
    Serial.println("Planned Coordinates:");
    Serial.println(plannedCoords);
    Serial.println("Planned Revolutions:");
    Serial.println(plannedRevs);
    Serial.println("Planned Steps:");
    Serial.println(plannedSteps);
    Serial.println("----------------------------------------");


    if (plannedSteps < 0) {
      currentPos -= 1;
      dirr = false;
    } else if (plannedSteps > 0) {
      currentPos += 1;
      dirr = true;
    }

    digitalWrite(dirPin, dirr);
    Serial.println(revsPerCoordinate * stepsPerRev);
    for (int i = 0; i < revsPerCoordinate * stepsPerRev; i++) {
      digitalWrite(stepPin, LOW);
      delayMicroseconds(microsecondSpeedDelay);
      digitalWrite(stepPin, HIGH);
      delayMicroseconds(microsecondSpeedDelay);
    }
  } else {
    Serial.println("I'm where I'm supposed to be :-------)");
    digitalWrite(stepPin, HIGH);
    digitalWrite(stepPin, LOW);

  }
}
